/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AppointmentCreateNestedManyWithoutDoctorsInput } from "./AppointmentCreateNestedManyWithoutDoctorsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { MedicalHistoryCreateNestedManyWithoutDoctorsInput } from "./MedicalHistoryCreateNestedManyWithoutDoctorsInput";
import { EnumDoctorTypeField } from "./EnumDoctorTypeField";

@InputType()
class DoctorCreateInput {
  @ApiProperty({
    required: false,
    type: () => AppointmentCreateNestedManyWithoutDoctorsInput,
  })
  @ValidateNested()
  @Type(() => AppointmentCreateNestedManyWithoutDoctorsInput)
  @IsOptional()
  @Field(() => AppointmentCreateNestedManyWithoutDoctorsInput, {
    nullable: true,
  })
  appointments?: AppointmentCreateNestedManyWithoutDoctorsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  contactInformation?: string | null;

  @ApiProperty({
    required: false,
    type: () => MedicalHistoryCreateNestedManyWithoutDoctorsInput,
  })
  @ValidateNested()
  @Type(() => MedicalHistoryCreateNestedManyWithoutDoctorsInput)
  @IsOptional()
  @Field(() => MedicalHistoryCreateNestedManyWithoutDoctorsInput, {
    nullable: true,
  })
  medicalHistories?: MedicalHistoryCreateNestedManyWithoutDoctorsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  specialty?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumDoctorTypeField,
  })
  @IsEnum(EnumDoctorTypeField)
  @IsOptional()
  @Field(() => EnumDoctorTypeField, {
    nullable: true,
  })
  typeField?: "Option1" | null;
}

export { DoctorCreateInput as DoctorCreateInput };
