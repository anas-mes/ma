/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AppointmentCreateNestedManyWithoutPatientsInput } from "./AppointmentCreateNestedManyWithoutPatientsInput";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { MedicalHistoryCreateNestedManyWithoutPatientsInput } from "./MedicalHistoryCreateNestedManyWithoutPatientsInput";
import { MedicationCreateNestedManyWithoutPatientsInput } from "./MedicationCreateNestedManyWithoutPatientsInput";
import { NotificationCreateNestedManyWithoutPatientsInput } from "./NotificationCreateNestedManyWithoutPatientsInput";

@InputType()
class PatientCreateInput {
  @ApiProperty({
    required: false,
    type: () => AppointmentCreateNestedManyWithoutPatientsInput,
  })
  @ValidateNested()
  @Type(() => AppointmentCreateNestedManyWithoutPatientsInput)
  @IsOptional()
  @Field(() => AppointmentCreateNestedManyWithoutPatientsInput, {
    nullable: true,
  })
  appointments?: AppointmentCreateNestedManyWithoutPatientsInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dob?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: () => MedicalHistoryCreateNestedManyWithoutPatientsInput,
  })
  @ValidateNested()
  @Type(() => MedicalHistoryCreateNestedManyWithoutPatientsInput)
  @IsOptional()
  @Field(() => MedicalHistoryCreateNestedManyWithoutPatientsInput, {
    nullable: true,
  })
  medicalHistories?: MedicalHistoryCreateNestedManyWithoutPatientsInput;

  @ApiProperty({
    required: false,
    type: () => MedicationCreateNestedManyWithoutPatientsInput,
  })
  @ValidateNested()
  @Type(() => MedicationCreateNestedManyWithoutPatientsInput)
  @IsOptional()
  @Field(() => MedicationCreateNestedManyWithoutPatientsInput, {
    nullable: true,
  })
  medications?: MedicationCreateNestedManyWithoutPatientsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => NotificationCreateNestedManyWithoutPatientsInput,
  })
  @ValidateNested()
  @Type(() => NotificationCreateNestedManyWithoutPatientsInput)
  @IsOptional()
  @Field(() => NotificationCreateNestedManyWithoutPatientsInput, {
    nullable: true,
  })
  notifications?: NotificationCreateNestedManyWithoutPatientsInput;
}

export { PatientCreateInput as PatientCreateInput };
